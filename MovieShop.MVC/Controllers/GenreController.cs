using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using MovieShop.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;

namespace MovieShop.MVC.Controllers
{
    public class GenreController : Controller
    {
        private readonly MovieShopDbContext _dbContext;
        public GenreController(MovieShopDbContext dbContext)
        {
            _dbContext = dbContext;
        }
        public IActionResult Index()
        {
            //get all the list of genres from database
            // call our genres Services, that wull call Genres repository that will use EF to get the data.
            //using (var db = new MovieShopDbContext(new DbContextOptions<MovieShopDbContext>()))
            //{
            //var genres = _dbContext.Genres.ToList();  // select * from genres
            // EF will convert these linq query into sql query:
            // we are using Genres(Dbset!!!, we are query from this class) not Genre(normal class)
            // var genres = _dbContext.Genres.Where(g => g.Name.Contains("A")).ToList(); //LINQ
            // var genresFiler = _dbContext.Genres.ToList().Where(g => g.Name.Contains("A")).ToList();
            //did you notice the difference between these two: which one do you prefer? 
            // in what scenero the second one is bad: when the dataset is large, second one will first convert all data into enumerable in memory and do the filter in the memory and then filer, bu the first one filer direct on data (SQL query) and then convert to enumerable


            //var genresCount = _dbContext.Genres.Count();
            //var genres2 = _dbContext.Genres.FirstOrDefault(g => g.Id == 200); //
                                                                              // var genres3 = _dbContext.Genres.First(g => g.Id == 200); //may raise exception
                                                                              // single and singleOrDefault

            //if i want to see the sql query generated by EF: use SQL Profiler

            // LinQ on IQueryable: because  _dbContext.Genres is a Dbset is a IQueryable type, so where here wil use the following method
            // public static IQueryable<TSource> Where<TSource>(this IQueryable<TSource> source, Expression<Func<TSource, bool>> predicate);

            // LinQ on IEnumerable:
            // public static IEnumerable<TSource> Where<TSource>(this IEnumerable<TSource> source, Expression<Func<TSource, bool>> predicate);
            return View();
        }
    }
}
